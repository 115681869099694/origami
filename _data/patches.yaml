3d-orientation:
  name: 3D Orientation
  type: processor
  inputs:
    - name: 3D Orientation
      desc: Takes a structure containing 'pitch', 'roll', and 'yaw' keys, usually provided by the Device Info patch.
  outputs:
    - name: Pitch
      desc: Outputs the pitch of the 3D orientation.
    - name: Roll
      desc: Outputs the roll of the 3D orientation.
    - name: Yaw
      desc: Outputs the yaw of the 3D orientation.
  desc: |
    This is a convenience patch that breaks out the 3D Orientation from the Device Info patch into pitch, roll, and yaw values you can use in your prototypes. These values reflect the physical orientation of your connected device running Origami Live. Try plugging these values into text layers and watch how the values change as you rotate your device.

border:
  name: Border
  type: consumer
  inputs:
    - name: Enable
      desc: Turns the border on and off.
    - name: Thickness
      desc: How thick the border is in pixels on each edge.
    - name: Color
      desc: The color of the border.
    - name: Alpha
      desc: Adjusts the opacity of the border.
  desc: |
    Draws a border of a given thickness and color around the edges of the layer group it&rsquo;s inside of. The border is similar to an inner stroke and has rectangular corners.


bouncy-animation:
  name: Bouncy Animation
  type: producer
  inputs:
    - name: Number
      desc: The number to animate. Usually a 0 or 1 value from a Switch or an Interaction patch.
    - name: Friction
      desc: The friction of the spring animation.
    - name: Tension
      desc: The tension of the spring animation.
  outputs:
    - name: Progress
      desc: The current value of the animation. Usually between or around 0 and 1.
  desc: |
    This patch lets you animate a value using a spring animation. The Pop Animation patch is the more modern version of this patch with easier to use controls and Code Export support, so it&rsquo;s recommended that you use it instead. However, if you&rsquo;re trying to animate something in an Iterator, you'll usually want to use this patch instead of Pop Animation since this will be able to animate each iteration independently. 

browser-chrome:
  name: Browser Chrome
  type: consumer
  inputs:
    - name: Enable
      desc: Enable or disable the theming of the Viewer window.
    - name: Window Title
      desc: Set the title of the Viewer window. 10.9 only.
    - name: URL
      desc: URL to display in the address bar.
    - name: Favicon
      desc: Takes a 16 px square image and displays it in the address bar. 10.9 only.
    - name: Enable Back
      desc: Enables or disables the back button in the toolbar.
    - name: Enable Forward
      desc: Enables or disables the forward button in the toolbar.
  desc: Styles the viewer window to look like a web browser when the composition is running. Click the right most toolbar button to stop the viewer. The back and forward buttons are accessible through the Browser Buttons patch.

browser-buttons:
  name: Browser Buttons
  type: producer
  outputs:
    - name: Back
      desc: A boolean that changes between 0 and 1 based on if the back button is down or not.
    - name: Forward
      desc: A boolean that changes between 0 and 1 based on if the forward button is down or not.
  desc: Gives you the state of the back and forward buttons from the Browser Chrome patch. Useful for prototyping navigating between pages on the desktop web.

button:
  name: Button
  type: consumer
  inputs:
    - name: Enable
      desc: Enable or disable the button.
    - name: Anchor Point
      desc: A point in the containing Layer Group this layer is positioned relative to.
    - name: X Position
      desc: The horizontal position in pixels.
    - name: Y Position
      desc: The vertical position in pixels.
    - name: Width
      desc: The width in pixels.
    - name: Height
      desc: The height in pixels.
    - name: Background Image
      desc: The image to show behind the button title.
    - name: Background Color
      desc: The fill color of the button background.
    - name: Title
      desc: The button label.
    - name: Title Color
      desc: The color of the label.
    - name: Title Font Name
      desc: The font to use for the label.
    - name: Title Font Size
      desc: The size of the font in pixels.
    - name: Title Offset
      desc: The vertical position of the label relative to the background.
    - name: Corner Radius
      desc: The radius of the corners in pixels.
    - name: Opacity
      desc: The opacity of the layer. From 0% (0) to 100% (1).
    - name: Scale
      desc: The scale of the layer. 100% (1) is the default scale and 0% (0) is completely hidden.
  desc: Shows a button with a customizable label and background. Connect it to the Interaction 2 patch to make it interactive.

classic-animation:
  name: Classic Animation
  type: processor
  inputs:
    - name: Number
      desc: The number to animate. Usually a number changing between 0 and 1.
    - name: Duration
      desc: The length of the animation in seconds.
    - name: Curve
      desc: The animation curve to animate with.
  outputs:
    - name: Progress
      desc: The current value of the animation. Usually between 0 and 1.
  desc: |
    Animate a changing number with a specified duration and easing curve. This is an old school alternative to using the Pop Animation patch.

color-transition:
  name: Color Transition
  type: processor
  inputs:
    - name: Progress
      desc: A Progress value (a number between 0 and 1).
    - name: Start Color
      desc: A Color to output at the beginning of the transition.
    - name: End Color
      desc: A Color to output at the end of the transition.
  outputs:
    - name: Color
      desc: The faded color.
  desc: |
    Fades between two colors.

counter-2:
  name: Counter 2
  type: producer
  inputs:
    - name: Increase
      desc: The Counter's output value will increase when this port is pulsed.
    - name: Decrease
      desc: The Counter's output value will decrease when this port is pulsed.
    - name: Jump
      desc: Pulse this port to jump to the Number specified by the Jump To Number port.
    - name: Jump to Number
      desc: The Number to jump to when the Jump port is pulsed.
    - name: Maximum Count
      desc: The maximum value this counter can reach before resetting to zero. Note that the counter will always remain *less* than this value.
  outputs:
    - name: Number
      desc: The current Number value of the Counter
  desc: |
    Represents a number that can be incremented, decremented or set to a specific value. To increment, pulse the "Increase" port and to decrement, pulse the "Decrease" port. To jump to a specific number, specify the number in the "Jump to Number" port and pulse the "Jump" port.

    The number can be optionally constrained within a boundary that starts at 0 and wraps around after a maximum number of values has been reached. Incrementing at the end value will wrap back around to the start value and decrementing at the start value will wrap back around to the end value. To set a constraint, set the "Maximum Count" port to a value greater than 0. If the counter is constrained, the "Jump to Number" value must fall within bounds, otherwise it will be wrapped according to the boundary.

cursor-control:
  name: Cursor Control
  type: consumer
  inputs:
    - name: Enable
      desc: Enables the cursor control patch
    - name: Style
      desc: The style of the cursor to display
    - name: Hide
      desc: Enable this port to hide the cursor when its over the viewer window.
  desc: |
    Allows you to hide or change the OS X cursor when it's over the viewer window.

delay:
  name: Delay
  type: processor
  inputs:
    - name: Value
      desc: The Value to delay
    - name: Duration
      desc: The amount of time to delay the value
    - name: Style
      desc: You can delay a value when it's increasing, decreasing, or always
  outputs:
    - name: Value
      desc: The value that was delayed
  desc: |
    Lets you delay a change by some duration in seconds.

switch:
  name: Switch
  type: processor
  inputs:
    - name: Flip
      desc: Takes a pulse to flip the state of the switch. If the switch is off this will turn it on, and if it&rsquo;s on, this will turn it off.
    - name: Turn Off
      desc: Takes a pulse to turn the switch off. If it&rsquo;s already off, sending a pulse to this port will have no effect.
    - name: Turn On
      desc: Takes a pulse to turn the switch on. If it&rsquo;s already on, sending a pulse to this port will have no effect.
  outputs:
    - name: On / Off
      desc: Outputs a 0 if the switch is off and a 1 if it&rsquo;s on.
  desc: |
    A Switch remembers a state. It works just like a light switch &mdash; it starts out as off, when you flip it it&rsquo;ll turn on, and then if you flip it again it&rsquo;ll turn off. For example, if you wanted to tap a photo and have it zoom in and stay that way when you release your finger, you could hook up the button tap to a Switch which would remember whether the photo should be zoomed in or not.
    
    The Flip port is useful for a symmetrical interaction &mdash; e.x. tapping a photo repeatedly to zoom it to large and small sizes. The Turn On and Turn Off port are useful for other interactions where you have different actions to control the switch. For example, for a compose window, you might have the compose button turn on the switch (animating in the window) and the Cancel and Done buttons in the window turning off the switch.
    

#--- NOT REVIEWED

progress:
  name: Progress
  type: processor
  desc: |
    Outputs a decimal value between 0 and 1 representing the progress of a Value within a range defined by a given Minimum and Maximum.

    Animation patches output a Progress value that you can use along with a Transition patch to animate values in an arbitrary range.

  inputs:
    - name: Minimum
      desc: The lower end of the range.
    - name: Maximum
      desc: The upper end of the range.
    - name: Value
      desc: A value that you wish to redefine in terms of the Minimum - Maximum range. Its value may be lower than Minimum or higher than Maxumum. This may happen for example with you have a bouncy that exceeds its target value or the user is rubber-banding within a scrollable range.
  outputs:
    - name: Progress
      desc: |
        A decimal number between 0 and 1 describing Value as a percent of the distance between Minumum and Maxumum. If Value is equal to Minimum, Progress will be 0.

        If the Value provided is greater or less than the range provided, the output will scale proportionally beyond 1 or 0.

transition:
  name: Transition
  type: processor
  desc: |
    Takes a number in the range of 0 to 1 and converts it to a number within a range starting with Start Value and ending in End Value.
  usage: |
    Transition patches are commonly connected between Animation patches to properties on layers so the animation progress can control a number of properties changing between their start and end values.

    You can connect multiple transition patches in series to animate between multiple states by using the output of your first Transition patch as the Start Value of your second.

  inputs:
    - name: Progress
      desc: 0-1 value that represents how far along a transition you are.
    - name: Start Value
      desc: The value to output at the start of the transition.
    - name: End Value
      desc: The value to output at the end of the transition.
  outputs:
    - name: Value
      desc: A number between your Start and End values


layer:
  name: Layer
  type: consumer
  inputs:
    - name: Enable
      desc: When false, the Layer is invisible
    - name: Anchor Point
      desc: |
        A point within the Layer's container (current Layer Group or Device patch) that you would like to position the layer relative to.
        
        Options for positioning are:

        1. Top Left
        1. Top Center
        1. Top Right
        1. Center Left
        1. Center
        1. Center Right
        1. Bottom Left
        1. Bottom Center
        1. Bottom Right

    - name: X Position
      desc: Number of pixels to the right of the position specified in the Anchor Point.
    - name: Y Position
      desc: Number of pixels up from the position specified in the Anchor Point.
    - name: Z Position
      desc: Depth component of a layer's position in 3D space. Units are in pixels as with Width / Height
    - name: X Rotation
      desc: Rotate a layer in 3D space along a horizontal line centered on the Anchor Point.
    - name: Y Rotation
      desc: Rotate a layer in 3D space along a vertical line centered on the Anchor Point.
    - name: Z Rotation
      desc: Rotate a layer in two dimensions, or the Z component of a 3D rotation
    - name: Width
      desc: |
        The width on screen in pixels the Layer's Image will be shown. The eventual width is also affected by Scale and the transform of the current Layer Group.

          If a value of 0.0 is passed in, the layer will take on the size of the current value of its Image input.

    - name: Height
      desc: |
        The height on screen in pixels the Layer's Image will be shown. The eventual height is also affected by Scale and the transform of the current Layer Group.

        If a value of 0.0 is passed in, the Layer will take on the size of the current value of its Image input.

    - name: Image
      desc: An Image to show on screen
    - name: Mask Image
      desc: An Image that will be used when compositing the Layer on screen to mask off certain areas so that they do not display. This is similar to a layer mask in Photoshop.
    - name: Color
      desc: A color with which the Image will be tinted before display. You can use this with a pure white image to display the same shape in different colors.
    - name: Opacity
      desc: Controls the visibility of a Layer.
    - name: Scale
      desc: How much to increase or decrease the size of the Layer. A value of 0.0 will make it invisible, whereas 2.0 will make it twice the normal size.
  desc: |
    Display image on screen and adjust how it shows up.
  usage: Build your interface out of Layer patches. They can recieve taps in combination with the Interaction patch.

textlayer:
  name: Text Layer
  type: consumer
  inputs:
    - name: Enable
      desc: When false, the Layer is invisible
    - name: Anchor Point
      desc: |
        A point within the Layer's container (current Layer Group or Device patch) that you would like to position the layer relative to.
        
        Options for positioning are:

        1. Top Left
        1. Top Center
        1. Top Right
        1. Center Left
        1. Center
        1. Center Right
        1. Bottom Left
        1. Bottom Center
        1. Bottom Right

    - name: Text
      desc: A string that you would like to display. You can either set this value directly by double-clicking on the patch input, or connect it to a dynamic input that builds the string from other values.
    - name: Font Name
      desc: The font family with which to render the text. For example HelveticaNeue-Bold
    - name: X Position
      desc: Number of pixels to the right of the position specified in Anchor Point
    - name: Y Position
      desc: Number of pixels up from the position specified in Anchor Point
    - name: Width
      desc: |
        The width in pixels of the box on screen that will contain the text. If a value of 0.0 is passed in, the text will be a single line, as wide as necessary.
                          

    - name: Height
      desc: |
        The height in pixels of the box on screen that will contain the text. If a value of 0.0 is passed in, the text not be vertically constrained.
        
    - name: Shadow Info
      desc: Draw a shadow on the text by configuring a Shadow Info patch connected to this input
    - name: Color
      desc: A color with which the Image will be tinted before display. You can use this with a pure white image to display the same shape in different colors.
    - name: Opacity
      desc: How visible the layer is from 0 (invisible) to 1 (visible).
    - name: Scale
      desc: How much to increase or decrease the size of the Text Layer. A value of 0.0 will make it invisible, whereas 2.0 will make it twice the normal size.
  desc: |
    Text Layers allow you show text on screen. Anchor Point determines the point from which the text will be layed out as well as the text alignment of the whole block. 
  usage: Build your interface out of Layer patches. They can recieve taps in combination with the Interaction patch.


velocity:
  name: Velocity
  type: processor
  inputs:
    - name: Value
  outputs:
    - name: Velocity
  desc: |
    Outputs the difference in value between the previous frame and current frame. For example, if the value was 2 in the previous frame and it's currently 5, the velocity will be 3.
    
    This patch supports iterators.

touch:
  name: Touch
  type: producer
  outputs:
    - name: X Position
      desc: Coordinate in pixels of the current mouse or touch (1 finger) position
    - name: Y Position
      desc: Coordinate in pixels of the current mouse or touch (1 finger) position
    - name: Down
  desc: |
    Outputs the location of the mouse or touch on the screen and whether it's down or not, anywhere on screen. Use Interaction 2 instead if you want taps on a specific layer.

timer:
  name: Timer
  type: processor
  inputs:
    - name: Turn On
      desc: A pulse on this port will begin timing
    - name: Duration
      desc: How long to run the timer for
  outputs:
    - name: Time
    - name: Done
      desc: Sends a pulse when the timer is done
  desc: Runs a timer for a specified duration starting with a specified signal. It outputs the state of the timer as well as the time elapsed.

bouncy:
  name: Pop Animation
  type: producer
  inputs:
    - name: Number
      desc: The changing value you wish to animate. This is the target value to which Pop Animation will animate.
    - name: Bounciness
      desc: A qualitative feeling of how springy the animation will feel. This can be changed as the animation is running for advanced effects.
    - name: Speed
      desc: A qualitative feeling of how fast the animation progresses towards the target value. This can be changed as the animation is running for advanced effects.
  outputs:
    - name: Progress
      desc: Animated value
  desc: |
    Animate a changing value with a spring. You can use the Code Export feature in the Origami menu to use these animations in your built products.

  usage: |
    Typically you connect the input of Pop Animation to a Switch representing some state change, and the output to any number of Transitions, controlling different properties in the interface that should change based on the state change in the Switch. These Transitions will move together since their values are derived from the same Pop Animation patch.




